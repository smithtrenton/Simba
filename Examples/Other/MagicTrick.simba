////////////////////////////////////////////////////////////////////////////////
//
//  Run the script an observe the awesomeness of Simba reading your mind!
//
//  Think of a number between 1 and 63 (inclusive) and answer either 'Yes'
//    or 'No' to the questions.
//
//  MYSTERY NUMBERS by Daniel.
//
////////////////////////////////////////////////////////////////////////////////

program MysteryNumbers;

// Variables relating to the form.
var
  Form: TForm;
  MainText, Appear: TLabel;
  NumText: array[0..31] of TLabel;
  Params: TVariantArray;  // Required for use of ThreadSafeCall.
  btnYes, btnNo: TButton;

// Variables NOT relating to the form :-)
var
  TheNumbers: array[0..5] of array of Integer;
  Number, CurrSheet: Integer;
  ClickedNext: Boolean;  // False = At Title Screen.

{- Saves having to loop through and change the visible state all the time,
     less lines -}
procedure NumTextVisibleState(Visible: Boolean);
var
  I: Integer;
begin
  for I := 0 to 31 do
    NumText[I].Visible := Visible;
end;

{- Show's the correct numbers on the form -}
procedure PrintNumbers(Sheet: Integer);
var
  I: Integer;
begin
  NumTextVisibleState(False);

  Wait(150);  // Prevents the user from clicking too fast + makes them realise that
              //   - their number may of changed position.

  for I := 0 to 31 do
    NumText[I].Caption := IntToStr(TheNumbers[Sheet][I]);

  NumTextVisibleState(True);
end;

procedure btnClick(Sender: TObject);
begin
  if(not(ClickedNext)) then  // Are we at the title screen?
  begin
    ClickedNext := True;      // Since we are, show the first batch of numbers.
    CurrSheet := 0;
    PrintNumbers(CurrSheet);

    btnYes.Visible := True;

    with btnNo do
    begin
      Left := (Form.ClientWidth div 2) + Width - (Width - 5);
      Caption := 'No';
    end;

    MainText.Visible := False;
    Appear.Visible := True;

    Exit;
  end;

  if(Sender = btnYes) then
    Number := Number + TheNumbers[CurrSheet][0];  // The magic!

  Inc(CurrSheet);
  if(CurrSheet < 6) then  // If CurrSheet goes over 5, we'll get an out of range error!
  begin
    PrintNumbers(CurrSheet);
    Exit;
  end;

  // Let's show the user that Simba is almighty.
  Appear.Visible := False;
  MainText.Visible := True;
  MainText.Caption := 'Your number was...' + #13#10 + IntToStr(Number) + '!';
  MainText.Left := (Form.ClientWidth div 4);

  NumTextVisibleState(False);

  btnYes.Visible := False;
  btnNo.Visible := False;
end;

{- Create and set up all the components of the form we're using.
   Also appropriately loads the title screen. -}
procedure InitialiseForm;
var
  I: Integer;
  Row, Col: Integer;
begin
  Form := TForm.Create(nil);

  with Form do
  begin
    ClientWidth := 280;
    ClientHeight := 203;
    BorderStyle := bsSingle;
    Color := clWhite;
    Position := poMainFormCenter;

    Caption := 'Mystery Numbers - Daniel';
  end;

  MainText := TLabel.Create(Form);

  with MainText do
  begin
    Parent := Form;

    with Font do
    begin
      Size := 12;
      Name := 'Arial';
      Style := [fsBold];
    end;

    Caption := 'Think of a number between' + #13#10 + '1 and 63 (incl.)' + #13#10#13#10 +
      'Click ''Next'' to continue.';

    Left := (Form.ClientWidth div 8);
    Top := (Form.Height div 3);
    Alignment := taCenter;
  end;

  Appear := TLabel.Create(Form);

  with Appear do
  begin
    Parent := Form;

    Caption := 'Does your number appear below?';

    Left := 10;
    Top := 10;

    Visible := False;
  end;

  btnYes := TButton.Create(Form);

  with btnYes do
  begin
    Parent := Form;

    Width := 60;
    Height := 26;

    Left := (Form.ClientWidth div 2) - Width - 5;
    Top := Form.ClientHeight - Height - 10;

    Caption := 'Yes';

    Visible := False;

    OnClick := @btnClick;
  end;

  btnNo := TButton.Create(Form);

  with btnNo do
  begin
    Parent := Form;

    Width := 60;
    Height := 26;

    Left := (Form.ClientWidth div 2) + Width + 5;
    Top := Form.ClientHeight - Height - 10;

    Caption := 'Next';

    Visible := True;

    OnClick := @btnClick;
  end;



  Row := -1;
  Col := 0;

  // Loop below formats the numbers to display correctly
  //  - (i.e. row by row and column by column).
  for I := -1 to 30 do
  begin
    Inc(Col);

    if((I + 1) mod 8 = 0) then
    begin
      Inc(Row);
      Col := 0;
    end;

    NumText[I + 1] := TLabel.Create(Form);
    with NumText[I + 1] do
    begin
      Parent := Form;

      Width := 30;
      Height := 30;

      Left := 30 + Col * 30;
      Top := 30 + Row * 30 + 12;

      Alignment := taCenter;
    end;
  end;

  NumTextVisibleState(False);  // Since we are at the title screen, we don't want
                               //  - to show the numbers, do we?

  Form.ShowModal;  // Show the form.
end;

{- Rather self-explanatory. -}
procedure CloseForm;
begin
  Form.Close;
end;

// main()
begin
  { If this sequence of numbers is wrong, then the whole magic trick is stuffed }
  TheNumbers[0] := [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33,
    35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63];
  TheNumbers[1] := [2, 3, 6, 7, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 30, 31, 34,
    35, 38, 39, 42, 43, 46, 47, 50, 51, 54, 55, 58, 59, 62, 63];
  TheNumbers[2] := [4, 5, 6, 7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31, 36,
    37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63];
  TheNumbers[3] := [8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31,
    40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63];
  TheNumbers[4] := [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
    48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63];
  TheNumbers[5] := [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
    48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63];

  Writeln(Length(TheNumbers[5]));

  ThreadSafeCall('InitialiseForm', Params);  // Let's load and show the form! Be AMAZED!
end.
